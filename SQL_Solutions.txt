1. Select users whose id is either 3,2 or 4
- Please return at least: all user fields
ANS: select * from users
     where id in(1,2,4)

2. Count how many basic and premium listings each active user has
- Please return at least: first_name, last_name, basic, premium
ANS:select first_name,last_name,sum(case when l.status='2' then 1 else 0 end) as basic,sum(case when l.status='3' then 1 else 0 end) as premium from users as u
	left join listings as l on  u.id = l.user_id
	where u.status=2
	group by l.user_id;


3. Show the same count as before but only if they have at least ONE premium listing
- Please return at least: first_name, last_name, basic, premium
ANS:select first_name,last_name,sum(case when l.status='2' then 1 else 0 end) as basic,sum(case when l.status='3' then 1 else 0 end) as premium from users as u
	left join listings as l on  u.id = l.user_id
	where u.status=2
	group by l.user_id having premium >0;


4. How much revenue has each active vendor made in 2013
- Please return at least: first_name, last_name, currency, revenue
ANS:select first_name,last_name,rev.currency as currency,sum(rev.price) as revenue from users
	left join 
	(select user_id,temp.currency as currency,temp.price as price from listings
	inner join
	(select listing_id,currency,price from clicks
	where YEAR(created) = '2013') as temp on listings.id=temp.listing_id where user_id is not null) as rev on users.id = rev.user_id
	where users.status =2
	group by users.id,currency;


5. Insert a new click for listing id 3, at $4.00
- Find out the id of this new click. Please return at least: id
ANS:insert into clicks (listing_id,price,currency,created ) values(3,4.00,'USD',NOW());
    SELECT LAST_INSERT_ID();


6. Show listings that have not received a click in 2013
- Please return at least: listing_name
ANS:select name as listing_name from listings
    where id not in
    select listing_id from clicks
    where year(created) in ('2013'));


7. For each year show number of listings clicked and number of vendors who owned these listings
- Please return at least: date, total_listings_clicked, total_vendors_affected
ANS:select year(created) as date,count(distinct listing_id) as total_listings_clicked,COUNT(distinct user_id)  as total_vendors_affected from clicks
	left join listings on clicks.listing_id=listings.id
    group by date;


8. Return a comma separated string of listing names for all active vendors
- Please return at least: first_name, last_name, listing_names
ANS:select first_name,last_name,GROUP_CONCAT(name) as listing_names FROM listings 
    inner join users on listings.user_id=users.id
    where users.status=2
    GROUP BY user_id;